# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017, Magenta ApS
# This file is distributed under the same license as the datafordeler
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: datafordeler 1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-11-30 15:57+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.4.0\n"

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:6
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:38
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:44
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:50
msgid "LookupDefinition"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:13
msgid ""
"Created by lars on 13-06-17. A LookupDefinition is a way of defining how "
"to look up entities based on the data hierarchy within them. Since the "
"data in an entity is spread out over multiple tables, it is difficult to "
"do a database select on a field when you don't know where it is. So, "
"DataItem subclasses and Query subclasses should implement a method "
"returning a LookupDefinition. Examples of FieldDefinitions: path: "
"coreData.attribute, value: \"123\", class: java.lang.Integer This means "
"that for a given DataItem table, join its \"coreData\" table and match on"
" attribute = 123, where the value has been cast to an integer This is "
"done because queries insert values as strings, possibly containing "
"wildcards, but if there is no wildcard we must cast to the correct type "
"before the value is inserted in hibernate path: $.foo, value: \"42\", "
"class: java.lang.Integer This means that we should look in the Entity "
"table (instead of the DataItem table) for a match on foo = 42 All "
"contained FieldDefinitions will be AND'ed together, and if a "
"FieldDefinition value in the resulting query Full usage example: "
"LookupDefinition lookupDefinition = new "
"LookupDefinition(Collections.singletonMap(\"foo.bar\", 42)) Class dClass "
"= FooDataItem.class String dataItemKey = \"d\"; String entityKey = \"e\";"
" String join = lookupDefinition.getHqlJoinString(dataItemKey, entityKey);"
" String where = lookupDefinition.getHqlWhereString(dataItemKey, "
"entityKey); org.hibernate.query.Query query = session.createQuery( "
"\"select \" + dataItemKey + \" from \" + dClass.getCanonicalName() + \" "
"\"+dataItemKey+ \" \" + join + \" where \" + where, dClass ); HashMap "
"parameters = lookupDefinition.getHqlParameters(dataItemKey, entityKey); "
"for (String key : parameters.keySet()) { query.setParameter(key, "
"parameters.get(key)); } This would look up items of the FooDataItem class"
" where the subtable foo has a variable bar with value 42. See also the "
"various uses in QueryManager, which perform database lookups based on "
"LookupDefinitions from Query and DataItem objects"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:16
msgid "Fields"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:18
msgid "entityref"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:24
msgid "escape"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:30
msgid "separator"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:36
msgid "Constructors"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:56
msgid "Methods"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:58
msgid "getHqlJoinString"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:63
msgid ""
"Obtain the table join string, including all tables that have been added "
"to the LookupDefinition"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst
msgid "Parametre"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:65
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:77
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:101
msgid ""
"Root key, denoting the baseline for the join. This is most often the hql "
"identifier for the DataItem table: if the HQL so far is \"SELECT e from "
"FooEntity JOIN e.registrations r JOIN r.effects v JOIN v.dataItems d\", "
"then \"d\" would be the rootKey to look up paths within the dataItem "
"table"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:66
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:78
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:102
msgid ""
"Entity key, denoting the hql identifier for the Entity table. In the "
"above example, \"e\" would be the entityKey"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst
msgid "Returnerer"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:67
msgid "join string, e.g. \"JOIN d.abc d_abc JOIN e.foo e_foo\""
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:70
msgid "getHqlParameters"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:75
msgid ""
"Obtain the values defined in the LookupDefinition, with their paths "
"normalized to match what would be output by getWhereString()"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:79
msgid ""
"Map to be used for filling the query parameters. E.g. {\"d_abc_def\": 23,"
" \"d_abc_ghi\": 42}"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:82
msgid "getHqlWhereParts"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:88
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:94
msgid "getHqlWhereString"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:99
msgid ""
"Obtain the table where string, specifying the hql WHERE statement for "
"each value in the LookupDefinition Used in conjunction with "
"getHqlJoinString (and using the same input keys)."
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:103
msgid ""
"where string, e.g. \" AND d_abc.def = :d_abc_def AND d_abc.ghi = "
":d_abc_ghi"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:106
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:112
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:118
msgid "put"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:124
#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:130
msgid "putAll"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:135
msgid ""
"Under a given top key, put a map of lookups into our hashmap. For "
"example: putAll(\"abc\", {\"def\": 23, \"ghi\": 42}) will result in "
"{\"abc.def\": 23, \"abc.ghi\": 42}"
msgstr ""

#: ../../source/autogen-api/dk/magenta/datafordeler/core/database/LookupDefinition.rst:141
msgid "setMatchNulls"
msgstr ""

