# To load local settings in Intellij add the following to program arguments in run configuration:
#   --spring.config.location="classpath:/application.properties,file:$MODULE_DIR$/local_settings.properties"



# Define the port that the service will listen on
server.port=${SERVER_PORT}

dafo.server.name=${SERVERNAME}

# Define SSL keystores for tomcat HTTPS
server.ssl.key-store=${SSL_STORE_PATH}
server.ssl.key-store-password=${SSL_STORE_PASSWORD}
server.ssl.key-alias=${SSL_ALIAS}
server.ssl.key-password=${SSL_KEY_PASSWORD}
server.ssl.enabled=${SSL_ENABLE}

# Enable the user database and set up the connection info for it
dafo.userdatabase.enabled=${USER_DATABASE_ENABLED}
dafo.userdatabase.securitydisabled=${USER_DATABASE_SECURITY_DISABLED:false}
dafo.userdatabase.url=${USER_DATABASE_URL}
dafo.userdatabase.username=${USER_DATABASE_USERNAME}
dafo.userdatabase.password=${USER_DATABASE_PASSWORD}

# The XML metadata from the STS server we trust
dafo.tokenvalidation.issuer-metadata-path=${STS_METADATA_PATH:#{null}}

# How many seconds of time skew to allow when checking token timestamps = 5 minutes
dafo.tokenvalidation.time-skew-in-seconds=${TOKEN_TIMESKEW_ALLOW:300}

# What is the maximum allowed lifetime of a token = 12 hrs
dafo.tokenvalidation.max-assertion-time-in-seconds=${TOKEN_TTL:43200}

# Which audience URI do we expect tokens to have
dafo.tokenvalidation.audience-URI=https://data.gl


# Whether this server is the one to process cron jobs
dafo.cron.enabled=${CRON_ENABLE:false}
dafo.pull.enabled=${PULL_ENABLE:false}
dafo.dump.enabled=${DUMP_ENABLE:true}
dafo.statistics.enabled=${STATISTICS_ENABLE:true}

dafo.error_file=${ERRORFILE_DIR}/dafo.err

pitu.sdn.whitelist=CN=nopitusec04.dmz70.local
pitu.idn.whitelist=CN=nopitusec04.dmz70.local
pitu.base.url=https://pituadress/
ip.whitelist=${IP_WHITELIST}


## CPR Config

dafo.cpr.person.direct.allowDirectPersonLookup=${CPR_DIRECT_PERSON_LOOKUP_ENABLE:false}
dafo.cpr.person.direct.password-change-enabled=${CPR_PASSWORD_CHANGE_ENABLE:false}
# Optional parameter for use in local development
dafo.cpr.encryption.keyfile=${CPR_ENCRYPTION_KEYFILE:#{null}}

# Proxy server to use for FTP access to CPR servers
dafo.cpr.proxy-url=${CPR_PROXY_URL}
# dafo.cpr.proxy-url=http://10.240.81.10:80

# Local folder to store CPR files in.
# The contents of this folder is very important; when pulling, any files that
# are found on the remote server, but not found here, will be downloaded and parsed
dafo.cpr.local-copy-folder=${CPR_LOCAL_DIR}

# Enable subscription for Person loading in CPR: When importing, detect people
# not living in Greenland, and tell CPR that we want to subscribe to changes on
# this person
# Since the results of the subscription is global, applying to all servers that
# are fetching from the same source, only one server should have this set.
# That is, only *one* server out of *all* servers listening to the CPR source.
dafo.cpr.person.subscription-enabled=${CPR_SUBSCRIPTION_ENABLE}
dafo.cpr.person.subscription.generate-schedule=${CPR_SUBSCRIPTION_SCHEDULE:0 4 * * *}

# Where to store locally generated Person subscription files. Not particularly important,
# the files are mostly there for later inspection when debugging.
dafo.cpr.person.local-subscription-folder=${CPR_SUBSCRIPTION_DIR:#{null}}

# Customer ID as assigned by CPR. A four-digit number
dafo.cpr.person.customer-id=${CPR_CUSTOMER_ID:0}

# Job ID as assigned by CPR. A six-digit number. This is usually the
# customer ID followed by 01
dafo.cpr.person.jobid=${CPR_JOB_ID:0}


## CVR Config

dafo.cvr.demoCompanyFile=${CVR_DEMO_COMPANYFILE:#{null}}
dafo.cvr.demoUnitFile=${CVR_DEMO_UNITFILE:#{null}}
dafo.cvr.demoParticipantFile=${CVR_DEMO_PARTICIPANTFILE:#{null}}

