services:
  datafordeler:
    container_name: datafordeler
    profiles:
      - donotstart
    image: datafordeler:latest
    build:
      context: .
      dockerfile: docker/Dockerfile.jre
    depends_on:
      - datafordeler-db
    env_file:
      - ./docker/dev-env/datafordeler.env
    volumes:
      - ./plugin/cvr/src/test/resources/company_in.json:/app/dev-env/local/cvr/company_in.json
      - ./plugin/cvr/src/test/resources/unit.json:/app/dev-env/local/cvr/unit.json
      - ./plugin/cvr/src/test/resources/person.json:/app/dev-env/local/cvr/person.json
      - ./plugin/geo/src/test/resources/municipality.json:/app/dev-env/local/geo/municipality.json
      - ./plugin/geo/src/test/resources/locality.json:/app/dev-env/local/geo/locality.json
      - ./plugin/geo/src/test/resources/post.json:/app/dev-env/local/geo/post.json
      - ./plugin/geo/src/test/resources/road.json:/app/dev-env/local/geo/road.json
      - ./plugin/geo/src/test/resources/access.json:/app/dev-env/local/geo/access.json
      - ./plugin/geo/src/test/resources/unit.json:/app/dev-env/local/geo/unit.json
      - ./plugin/geo/src/test/resources/building.json:/app/dev-env/local/geo/building.json
      - ./conf/sts_metadata.test.xml:/tmp/sts_metadata.test.xml:ro
      - ./docker/createdbs.sql:/app/createdbs.sql
    environment:
      - DATABASE_IMPORT_FILES=/app/createdbs.sql
    ports:
      - 8080:80
#      - 7012:7012
#    command: java -Xms8g -Xmx16g -XX:+HeapDumpOnOutOfMemoryError -Djava.rmi.server.hostname=127.0.0.1 -XX:HeapDumpPath=/app/log -Dcom.sun.management.jmxremote.rmi.port=7012 -Dcom.sun.management.jmxremote.port=7012 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dloader.path=/app/plugin/ -cp /app/core/datafordeler-core-exec.jar org.springframework.boot.loader.launch.PropertiesLauncher

  datafordeler-db:
    profiles:
      - donotstart
    container_name: datafordeler-db
    build:
      context: .
      dockerfile: docker/Dockerfile.sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=testTEST1
      - TZ=Europe/Copenhagen
    ports:
      - "1434:1433"
    volumes:
      - ./docker/dev-env/local:/app/dev-env/local
      - ./docker/dev-env/db/initiate-db.sql:/app/initiate-db.sql
      - ./docker/manual_initiate.sh:/app/manual_initiate.sh

  test:
    container_name: datafordeler-test
    profiles:
      - donotstart
    image: datafordeler:latest
    env_file:
      - ./docker/dev-env/datafordeler.env
    depends_on:
      - datafordeler-db
    volumes:
      - ./docker/dev-env/m2:/root/.m2
      - ./core/src:/app/core/src
      - ./plugin/cpr:/app/plugin/cpr
      - ./plugin/cvr:/app/plugin/cvr
      - ./plugin/geo:/app/plugin/geo
      - ./plugin/cpr/src/test/resources/GLBASETEST:/app/dev-env/local/cpr/download/d170608.l534902
      - ./plugin/cpr/src/test/resources/GLBASETEST2:/app/dev-env/local/cpr/download/d170610.l534901
      - ./plugin/cvr/src/test/resources/unit.json:/app/dev-env/local/cvr/unit.json
      - ./plugin/cvr/src/test/resources/person.json:/app/dev-env/local/cvr/person.json
      - ./plugin/geo/src/test/resources/municipality.json:/app/dev-env/local/geo/municipality.json
      - ./plugin/geo/src/test/resources/locality.json:/app/dev-env/local/geo/locality.json
      - ./plugin/geo/src/test/resources/post.json:/app/dev-env/local/geo/post.json
      - ./plugin/geo/src/test/resources/road.json:/app/dev-env/local/geo/road.json
      - ./plugin/geo/src/test/resources/access.json:/app/dev-env/local/geo/access.json
      - ./plugin/geo/src/test/resources/unit.json:/app/dev-env/local/geo/unit.json
      - ./plugin/geo/src/test/resources/building.json:/app/dev-env/local/geo/building.json
#    command: bash -c "cd /app/core && mvn test"
#    command: bash -c "cd /app/plugin/ger && mvn test"
    command: bash -c "cd /app/plugin/cvr && mvn test"
#    command: bash -c "cd /app/plugin/statistik && mvn test"
#    command: bash -c "cd /code/plugin/geo && mvn --batch-mode -T 2C test -Dtest=TestService#testRoad"
    #use docker compose up test to execute tests

  doc-build:
    container_name: doc-build
    build:
      context: .
      dockerfile: docker/Dockerfile.docs
    volumes:
      - datafordeler-doc:/output

  doc-web:
    container_name: doc-web
    image: halverneus/static-file-server
    volumes:
      - datafordeler-doc:/web
    ports:
      - "8081:8080"

volumes:
  datafordeler-gl:
  datafordeler-doc:
